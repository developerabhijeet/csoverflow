{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from './types';\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post('api/users/signup', userData).then(res => history.push(\"/login\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const loginUser = userData => dispatch => {\n  axios.post(\"api/users/login\", userData).then(res => {\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(SetCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const SetCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n_c = SetCurrentUser;\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(SetCurrentUser({}));\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SetCurrentUser\");","map":{"version":3,"sources":["/home/rails/Desktop/companystackoverflow/Client/src/actions/authActions.jsx"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","SetCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,YAAvC,QAA2D,SAA3D;AACC,OAAO,MAAMC,YAAY,GAAI,CAACC,QAAD,EAAWC,OAAX,KAAqBC,QAAQ,IAAE;AAC1DT,EAAAA,KAAK,CAACU,IAAN,CAAW,kBAAX,EAA+BH,QAA/B,EAAyCI,IAAzC,CACEC,GAAG,IAAEJ,OAAO,CAACK,IAAR,CAAa,QAAb,CADP,EAC+BC,KAD/B,CACqCC,GAAG,IACrCN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEb,UADC;AAEPc,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAFX;AAOD,CARM;AAWP,OAAO,MAAMC,SAAS,GAAGb,QAAQ,IAAIE,QAAQ,IAAE;AAC7CT,EAAAA,KAAK,CAACU,IAAN,CAAW,iBAAX,EAA8BH,QAA9B,EAAwCI,IAAxC,CACEC,GAAG,IAAE;AACH,UAAM;AAACS,MAAAA;AAAD,QAAUT,GAAG,CAACO,IAApB;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCF,KAAhC;AACApB,IAAAA,YAAY,CAACoB,KAAD,CAAZ;AACA,UAAMG,OAAO,GAAGtB,UAAU,CAACmB,KAAD,CAA1B;AACAZ,IAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACD,GAPH,EAOKV,KAPL,CAOWC,GAAG,IACXN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEb,UADC;AAEPc,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CARX;AAaD,CAdM;AAiBP,OAAO,MAAMM,cAAc,GAAGD,OAAO,IAAG;AACtC,SAAM;AACJR,IAAAA,IAAI,EAAEZ,gBADF;AAEJa,IAAAA,OAAO,EAAEO;AAFL,GAAN;AAID,CALM;KAAMC,c;AAOb,OAAO,MAAMC,cAAc,GAAC,MAAI;AAC9B,SAAM;AACJV,IAAAA,IAAI,EAAEX;AADF,GAAN;AAGD,CAJM;AAMP,OAAO,MAAMsB,UAAU,GAAG,MAAIlB,QAAQ,IAAE;AACtCa,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACA3B,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,EAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAJM","sourcesContent":["import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from './types';\n export const registerUser  = (userData, history)=>dispatch=>{\n   axios.post('api/users/signup', userData).then(\n     res=>history.push(\"/login\")).catch(err=>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n     );\n };  \n\n\n export const loginUser = userData => dispatch=>{\n   axios.post(\"api/users/login\", userData).then(\n     res=>{\n       const {token} = res.data;\n       localStorage.setItem(\"jwtToken\",token);\n       setAuthToken(token);\n       const decoded = jwt_decode(token);\n       dispatch(SetCurrentUser(decoded));\n     }).catch(err=>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n      );\n };\n\n\n export const SetCurrentUser = decoded =>{\n   return{\n     type: SET_CURRENT_USER,\n     payload: decoded\n   };\n };\n\n export const setUserLoading=()=>{\n   return{\n     type: USER_LOADING\n   };\n };\n\n export const logoutUser = ()=>dispatch=>{\n   localStorage.removeItem(\"jwtToken\");\n   setAuthToken(false);\n   dispatch(SetCurrentUser({}));\n };"]},"metadata":{},"sourceType":"module"}